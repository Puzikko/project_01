{"version":3,"file":"static/js/33.c5a3c10c.chunk.js","mappings":"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","sources":["webpack://project_01/./src/components/Users/Users.module.css?b9d0","components/Users/Paginator.jsx","components/Users/UsersPaginator.jsx","components/Users/Users.jsx","redux/UserSelector.js","components/Users/UsersContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__k+p0g\",\"paginatorWrapper\":\"Users_paginatorWrapper__eFfFG\",\"currentPage\":\"Users_currentPage__v+IJy\",\"notCurrentPage\":\"Users_notCurrentPage__OMpMn\"};","import React from \"react\";\r\nimport classUsers from './Users.module.css';\r\nimport { useState } from \"react\";\r\n\r\nlet Paginator = ({ totalUsersCount, pageSize, currentPage, onPageChanged }) => {\r\n\r\n    const [portion, setPortion] = useState(0); //current portion of pages\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize); //all pages with value \"pageSize\" \r\n    let portionCount = Math.ceil(pagesCount / (pageSize * 2)); //how much portions with (pageSize * 2) pages\r\n    let leftPageOfPortion = portion * (pageSize * 2) + 1;//first number of current portion\r\n    let rightPageOfPortion = (portion + 1) * (pageSize * 2);//last number of current portion\r\n    let pages = [];\r\n    for (let i = leftPageOfPortion; i <= rightPageOfPortion; i++) { pages.push(i) };\r\n\r\n    return <div className={classUsers.paginatorWrapper}>\r\n        {portion > 0 &&\r\n            <button onClick={() => { setPortion(portion - 1) }}>Previous</button>}\r\n\r\n        {pages.map(p => {\r\n            return (\r\n                <span key={p}\r\n                    className={currentPage === p ? classUsers.currentPage : classUsers.notCurrentPage}\r\n                    onClick={() => { onPageChanged(p) }} > {p} </span>\r\n            )\r\n        })}\r\n\r\n        <span key={pagesCount}\r\n            className={currentPage === pagesCount ? classUsers.currentPage : classUsers.notCurrentPage}\r\n            onClick={() => { onPageChanged(pagesCount) }} > {`... ${pagesCount}`} </span>\r\n\r\n        {portion < portionCount &&\r\n            <button onClick={() => { setPortion(portion + 1) }}>Next</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport classUsers from './Users.module.css';\r\nimport Photo from '../../images/Snapchat-Logo.jpg';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet UsersPaginator = ({ users, isButtonDisable, follow, unfollow }) => {\r\n    return <>\r\n        {users.map(user => <div key={user.id}>\r\n            <span>\r\n                <div className={classUsers.userPhoto} >\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small ? user.photos.small : Photo}\r\n                            alt='' />\r\n                    </NavLink>\r\n                </div>\r\n                <>\r\n                    {user.followed\r\n\r\n                        ? <button disabled={isButtonDisable.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}>Unfollow</button>\r\n\r\n                        : <button disabled={isButtonDisable.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id)\r\n                        }}>Follow</button>}\r\n                </>\r\n            </span>\r\n\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status === null || undefined ? 'Without status.' : user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>user.location.country</div>\r\n                    <div>user.location.city</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n        )}\r\n    </>\r\n}\r\n\r\nexport default UsersPaginator;","import React from \"react\";\r\nimport Paginator from \"./Paginator\";\r\nimport UsersPaginator from \"./UsersPaginator\";\r\n\r\nlet Users = ({ totalUsersCount, pageSize, currentPage, onPageChanged, users, isButtonDisable, follow, unfollow }) => {\r\n    return <>\r\n        <Paginator totalUsersCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged} />\r\n\r\n        <UsersPaginator users={users}\r\n            isButtonDisable={isButtonDisable}\r\n            follow={follow}\r\n            unfollow={unfollow} />\r\n    </>\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsButtonDisable = (state) => {\r\n    return state.usersPage.isButtonDisable\r\n}","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { compose } from \"redux\";\r\nimport { follow, unfollow, setCurrentPage, getUsersThunk } from \"../../redux/UserReducer\";\r\nimport Users from './Users.jsx';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { getIsButtonDisable, getCurrentPage, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../redux/UserSelector\";\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    };\r\n\r\n    onPageChanged = (page) => {\r\n        this.props.getUsersThunk(page, this.props.pageSize)\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                isButtonDisable={this.props.isButtonDisable} />\r\n        </>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isButtonDisable: getIsButtonDisable(state),\r\n    }\r\n};\r\n\r\nconst UsersContainer = compose(\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, getUsersThunk }),\r\n    //WithAuthRedirect\r\n)(UsersAPIComponent)\r\n\r\nexport default UsersContainer;"],"names":["totalUsersCount","pageSize","currentPage","onPageChanged","useState","portion","setPortion","pagesCount","Math","ceil","portionCount","rightPageOfPortion","pages","i","push","className","classUsers","onClick","map","p","users","isButtonDisable","follow","unfollow","user","to","id","src","photos","small","Photo","alt","followed","disabled","some","name","status","getUsers","state","usersPage","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","isFetching","getIsButtonDisable","UsersAPIComponent","page","props","getUsersThunk","this","Preloader","React","compose","connect","setCurrentPage"],"sourceRoot":""}